% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lrv.R
\name{long_run_V}
\alias{long_run_V}
\title{Estimate Long-Run Covariance Matrix}
\usage{
long_run_V(F_hat, Time = ncol(F_hat), window_size = NULL)
}
\arguments{
\item{F_hat}{A matrix of dimension \eqn{r \times T}, where each column represents observations of \eqn{r} latent factors at a given time.}

\item{Time}{An integer specifying the number of time points (defaults to \code{ncol(F_hat)}).}

\item{window_size}{Optional integer giving the size of the local rolling window used to estimate time-varying covariances.
Defaults to \code{floor(Time^{1/4})}.}
}
\value{
A list with components:
\describe{
\item{V_full}{The full estimated long-run covariance matrix of dimension \eqn{p \times p}, where \eqn{p = r(r+1)/2}.}
\item{V_diag}{The diagonal matrix formed from the diagonal entries of \code{V_full}.}
\item{V_non}{An identity matrix of dimension \eqn{p \times p}, used as a naive alternative.}
}
}
\description{
Computes localised estimates of the long-run covariance matrix of the vectorised outer products \eqn{F_t F_t^\top - I_r},
using a rolling window HAC-type approach. This is used in standardising test statistics in change point detection algorithms.
}
\details{
The function computes, for each time point \eqn{t}, the vectorised difference \eqn{F_t F_t^\top - I_r}, using the \code{vech}
operator (half-vectorisation with diagonal). Then, for each \eqn{t}, a sample covariance matrix is computed over a local window
of neighbouring time points. The full long-run covariance matrix is obtained by averaging over all local covariance matrices.

This method avoids global assumptions and accommodates time variation in second-order structure.
}
\examples{
\dontrun{
F_hat <- matrix(rnorm(3 * 300), nrow = 3)
V_list <- long_run_V(F_hat)
str(V_list$V_full)
}
}
