% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dgp_duan.R
\name{duan_dgp}
\alias{duan_dgp}
\title{Simulate Factor Model Data with Structural Breaks (Duan 2023)}
\usage{
duan_dgp(
  Time,
  p,
  type,
  dep = FALSE,
  seed = NULL,
  theta_coef = c(max(0.5 - 10 * log(Time)/Time, 0.42), 0.5, 0.5 + 6 * sqrt(Time)/Time)
)
}
\arguments{
\item{Time}{An integer specifying the length of the time series to be returned (post-burn-in).}

\item{p}{An integer giving the number of observed variables.}

\item{type}{An integer vector specifying the type of change at each break:
\describe{
\item{0}{No change.}
\item{1}{Rank reduction (drop in one factor loading).}
\item{2}{Rotational change in the loadings.}
\item{3}{Linear transformation (e.g., upper triangular transformation).}
\item{4}{Completely new random loadings (increase in rank).}
}}

\item{dep}{Logical. If \code{TRUE}, induces temporal dependence in the factors and idiosyncratic errors.}

\item{seed}{Optional integer to set a reproducible random seed.}

\item{theta_coef}{A numeric vector (default based on \code{Time}) specifying relative change-point locations, as proportions of \code{Time}.}
}
\value{
A list with components:
\describe{
\item{x}{A \code{p Ã— Time} matrix of simulated observations.}
\item{r}{An integer giving the final number of latent factors after all breaks.}
\item{m}{A vector of change-point locations.}
\item{type}{A vector indicating the type of change applied at each change-point.}
}
}
\description{
Generates high-dimensional time series data from a dynamic factor model with optional structural breaks
in the factor loadings. This simulation design follows Duan et al. (2023) and allows for several types
of change-point behaviour in the factor structure.
}
\details{
The function generates factors \code{f} and idiosyncratic errors \code{e}, optionally with AR(1) structure
(if \code{dep = TRUE}). Factor loadings are generated initially and then transformed at each break according
to the specified \code{type}. The signal \code{chi} is constructed by projecting the factors through the
piecewise-constant loading matrices, and noise is added to obtain the final observed matrix \code{x}.

The number of change-points is determined by the length of \code{type}, and their locations are based on
\code{theta_coef}, unless \code{type = 0}, which gives a no-change scenario.
}
\examples{
\dontrun{
sim <- duan_dgp(Time = 300, p = 50, type = c(1, 2, 4), dep = TRUE, seed = 123)
image(sim$x)
}
}
